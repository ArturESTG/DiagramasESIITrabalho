@startuml DiagramaClases

/'NOTAS IMPORTANTES
Processo - o processo não devia estar ligado ao conjunto de inputs e ao conjunto de output
pelo motivo que um processo pode ter varios ou um input/output

'/

/'
Inicio packages
'/

package "Data" {
    interface Selecet_Data {

    }

}

package "Data Ingestion" {
    interface Import_Data {
        + String import_primary(String patch)
        + String import_secundary(String patch)
    }

    class Import_Data {
    }
}

package "Data Processing" {
    interface Data_Processing {
        + void Process_data()
    }

    class Process_data implements Data_Processing{
    }

    /'
    Neste caso está assim para o improviso
    '/
    Process_data "0..1" -- "0..*" Import_Data
}

package "Inputs" {
    interface Gestao_Input {
        + void addEInput(Input input)
        + Input removerEtapa(Input target)
        + void alterarEtapa(Input target, Input etapa)
        + void consultarInput(Input target)
        + void listar()
        + String toString()
    }

    class Gestao_Inputs implements Gestao_Input {
        int count
    }

    abstract class Material {
        int id_material
    }

    abstract class Fonte_Energia {
        int id_fonte
        String fonte_energ
        float proporcao
        double fator_emissao
    }

    class Mix_Energia extends Fonte_Energia {
        double procura_ener_prim
        double uso_agua
    }

    class Energia_Hipotetica extends Fonte_Energia {
        double cont_energ_ponderada
    }

    /'
    Este classe junta um input e um ouptut numa classe
    apenas, porque existe coisas que são um input/output ao mesmo tempo
    '/
    class Material_Primario extends Material {

    }

    /'
    para materiais compostos(preFabricados), que ja possuem um valor de emissões
    associado a sua produção, que tambem deverá se somar ao PCF
    '/
    class Material_Composto extends Material {
    }


}

package "Outputs" {
    interface Gestao_Output {
        + void addOutput(Output output)
        + Output removerOutput(Output target)
        + void alterarOutput(Output target, Output output)
        + void consultarOutput(Output target)
        + void listar()
        + String toString()
    }

    class Gestao_Outputs implements Gestao_Output {
        int count
    }

/'Meter enum tipo emissao'/
    class Emissoes {
        double valor_emissao
        String unidade
    }

}

package "Flows" {
    Enum FlowType{
        Input
        Output
        Input_output
    }

    interface Gestao_Flow {
        + void addFlow(Flow flow)
        + Flow removerFlow(Flow target)
        + void alterarFlow(Flow target, Flow flow)
        + void consultarFlow(Flow target)
        + void listar()
        + String toString()
    }

    abstract class Flow {
        FlowType tipo
    }

    class Gestao_Flows implements Gestao_Flow {

    }

    Flow "0..*" -- "1..1" FlowType
    Gestao_Flows "1..*" -- "1..1" Flow
}

Emissoes --|> Flow
Material --|> Flow
Fonte_Energia --|> Flow

Flow "0..*" -- "1..1" Gestao_Outputs
Flow "0..*" -- "1..1" Gestao_Inputs
Flow "1..1" -- "0..*" Process_data

Emissoes "1..*" -- "1..1" Material_Composto
Emissoes "1..*" -- "1..1" Energia_Hipotetica



package "Processo" {
    interface Gestao_Processos {
        + void addProcesso(Processo processo)
        + Processo removerProcesso(Processo target)
        + void alterarProcesso(Processo target, Processo etapa)
        + void consultarProcesso(Processo target)
        + void listar()
        + String toString()
    }

    /'
    Fazer ligação 0..* com o Processo_unitario
    '/
    Enum Processo_Type{
        internal
        external
    }

    abstract class Processo {
        String name
        String descricao
        String localizacao
    }

    class Processo_Agregado extends Processo implements Gestao_Processos {
        int count_process
    }

    class Processo_unitario extends Processo {
        int id_processo_un
    }

    /'
    Aqui mete-se uma variavel
    para saber o valor necessario
    do input ou essa variavel vai
    estar no processo?
    '/

    /'
    As perdas nao seria uma interface
    do processo?????
    '/
    class Perdas {
        int id_perda
        double valor_ajustado
        double emissao_ajustada
        --
        + void calculate_valor_ajustado()
        + void calculate_emissao_ajustada()
    }

    Processo_unitario "0..*" - "1..1" Processo_Type
    Processo_unitario "1..1" - "0..*" Perdas
    Processo_unitario "1..1" - "0..*" Gestao_Flows
}

package "Etapa Produção" {

    interface Gestao_Etapas {
        + void addEtapa(Etapa etapa)
        + Etapa removerEtapa(Etapa target)
        + void alterarEtapa(Etapa target, Etapa etapa)
        + void consultarEtapa(Etapa target)
        + void listar()
        + String toString()
    }

    class Gestao_Etapa implements Gestao_Etapas {
        int count
        double consumo_eletre_estim
    }
}

package "Calculator" {
    /'
    Ver quais vão ser os argumentos de cada
    calculo

    Ver qual será melhor double ou float
    '/
    interface PCF_Tot {
        + double tot_emissoes_CO2e()
        + double emissoes_med_ponderada()
        + double tot_perdas()
        + double PCF_total()
        + double PCF_tot_ajustado()
    }

    interface Relatorios {
        + void relatorio_emissoes()
        + void relatorio_perdas()
        + void relatorio_componentes()
    }

    /'
    Aqui vai ser guardado todos os
    resultados das contas para obter o PCF
    e os seus dados
    '/
    class PCF implements PCF_Tot, Relatorios {
        double PCFProduto
        double ECF
        double LCF
        double PCFAjustado
    }
}

/'
Fim dos packages
'/

/'
Inicio das ligações
'/


/'Input Ligacoes'/

Processo_unitario "1..*" -- "1..1" Processo_Agregado
Gestao_Etapa "1..*" -- "1..1" Processo_Agregado

/'Ligações Processos'/
/'Ligaçoes PCF'/
PCF "1..1" -- "0..*" Gestao_Etapa


/'
Fim das ligações
'/
@enduml