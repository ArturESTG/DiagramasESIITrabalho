@startuml DiagramaClases

/'
Notas para quem for pegar nisto

1º Quando quero meter uma class como 
elemento de outra classe a forma correta 
de o fazer é criando uma ligação entre ambas, 
ex: 1..1/ 0..1 / 1..0

2º Leiam os meus comentarios, porque ou 
são duvidas ou e o meu racicionio para 
fazer alguma coisa

3º As ligações devem estar feitas no final
do documento, depois dos packages, se 
for uma ligação entre classes de diferentes
packages

ASS: Artur
'/

/'
Avisos/Notas Importantes

O MATERIAL PODE SER UM INPUT/OUTPUT AO MESMO TEMPO POIS UM MATERIAL/PRODUTO PODE
SER RETORNADA DEPOIS DE UM PROCESSO E UM PROCESSO PODE PRECISAR DE UM MATEIRAL
PARA FAZER UM PRODUTO

Todas as Classes que sao Conjunto_qualquerCoisa o nome é para alterar eu só 
meti conjunto para não estar a pensar muito num nome, mas temos de mudar o
nome para algo mais bonito.
'/

/'
Inicio packages
'/
package "Enums"{
    /'
    usado para distinguir processos internos dos externos, sem necessidade de utilização
    da classe etapaDeprodução
    '/
    Enum ProcessType{
        internal
        external
    }
        /'
    usado para evitar problemas de herança multipla, repetição de codigo, no caso dos componentes e materiais compostos
    pois sao a mesma coisa,assim ja atribui-se o tipo de fluxo do produto na hora
    '/
    Enum FlowType{
        Input
        Output
        Input_output
    }
}

package "Interfaces"{
    interface treatingDataInt{
        'part of data ingestion, the data comes in string format
        +importData(String path)
        'export data in a csv file
        +exportData(String path)
        'part of data processing
        +processData(String data) 
        'used to select/change the source of the data used in the api
        +selectData()
        'used to remove one of the sources of the data used in the api
        +removeData(String path)
    }

        interface Gestao_Input {
        + void addInput(Input input)
        + void removerInput(Input input)
        + void alterarInput(Input target, Input newInput)
        'pesquisa atraves das input com parametros (decidir quais os parametros)
        + void pesquisarEtapa()
        'qual necessidade do listar quando ha o toString
        + void listar()
        + String toString()  
    }

        interface Gestao_Output {
        + void addOutput(Output output)
        + void removerOutput(Output output)
        + void alterarOutput(Output target, Output output)
        + String toString() 
    }

        interface Gestao_Processos {
        + void addProcesso(Processo etapa)
        + void removerProcesso(Processo etapa)
        + void alterarProcesso(Processo target, Processo etapa)
        + String toString() 
    }
    
    
    interface Gestao_Etapa {
        + void addEtapa(Etapa etapa)
        + void removerEtapa(Etapa etapa)
        + void alterarProcesso(Etapa target, Etapa etapa)
        + void listar()
        + String toString()
    }
    

     /'
    Ver quais vão ser os argumentos de cada
    calculo

    Ver qual será melhor double ou float
    '/
    interface PCF_calculos {
        'Calculo do PCF na realização do produto
       + double PCFProduto()
        'Calculo do carbon footprint das eletricidades
       + double ECF()
        'Calculo do carbon footprint das perdas
       + double LCF()
        'Calculo do PCF ajustado, com base no PCFProduto somado ao pcf dos processos e perdas
       + double PCFAjustado()
    }

    interface relatorios {
        + void relatorio_emissoes()
        + void relatorio_perdas()
        + void relatorio_componentes()
    }
}
package "Data" {

    class treatingdata{
        - String path
        - Static int changes
    }

}

package "Produto"{
    abstract class produto{
        - FlowType tipo
        - Static int Cnt
    }

    package "Output"{
        class GestorOutput {
            -int Cnt
        }

        class Emissoes {
            -double valor_emissao
            -String unidade
        }

        class perdas {
        'perdas possuem um material, onde esta guardado o valor das perdas (perdas é output)
        }

    }


    package "Input"{
        class GestorInput{
            - int Cnt
        }

        abstract class Material {
            - String name
            - String unidade
            - double quantidade
        }

        class MaterialPrimario extends Material {
            
        }
        
        /'
        para materiais compostos(preFabricados), que ja possuem um valor de emissões
        associado a sua produção, que tambem deverá se somar ao PCF
        '/
        class MaterialComposto extends Material {
        }

        abstract class FonteEnergia {
            - String fonte
            - float proporcao
            - double fatorEmissao
        }

        class Mix_Energia extends FonteEnergia {
            - double procura_ener_prim
            - double uso_agua
        }

        class Energia_Hipotetica extends FonteEnergia {
            'Contribuição das emissões de CO2e deste tipo de energia (contribuicaoEmissoes = fatorEmissao * proporcao)
            '- double contribuicaoEmissoes , nao e necessario, pois, de acordo com a ideologia ca seguida, as emissoes guardam somente o valor das emissoes, logo esta classe vai possuir uma emissao
            /'
            fator emissão em fonte de energia, nao faz sentido quando sao criadas apartir da energia hipotetica
            pois o fatorEmissao das energias hipoteticas sao calculados apartir da soma do produto da proporcao e do fatorEmissao de cada fonte de energia
            '/
        }
    }    

    'Ligações
    produto "0..*" -- "1..1" GestorOutput
    Emissoes "1..*" -- "1..1" MaterialComposto
    Emissoes "1..*" -- "1..1" Energia_Hipotetica
    Emissoes "1..*" -- "1..1" perdas
    perdas "1..*" -- "1..1" Material


    Emissoes --|> produto
    FonteEnergia --|> produto
    Material --|> produto

}




package "Processo" {

    abstract class Processo {
        -String nome
        -String descricao
        -ProcessType tipo
        'para saber o numero total de processos
        -Static int Cnt
    }

    /'
    Fazer ligação 0..* com o Processo_unitario 
    '/
    class Processo_Agregado extends Processo {

    }

    class Processo_unitario extends Processo {
 
    }


}

package "Calculator" {
    /'
    Aqui vai ser guardado todos os 
    resultados das contas para obter o PCF
    e os seus dados
    '/
    class PCF{
        'no construtor enviar tambem os counters de processos e produtos utilizados para saber quando é necessario recalcular o PCF
        -double PCFProduto
        -double ECF
        -double LCF
        -double PCFAjustado

        'para saber quando é necessario recalcular o PCF
        -int produtosCnt
        -int processosCnt
    }
}

package "Relatorios" {
    class Relatorio {

    }
}

/'
Fim dos packages
'/

/'
Inicio das ligações
'/
/'Input Ligacoes'/


treatingdata ..|> treatingDataInt
GestorInput ..|> Gestao_Input
GestorOutput ..|> Gestao_Output
'Producao ..|> Gestao_Etapas
Relatorio ..|> relatorios
PCF ..|> PCF_calculos



Processo_unitario "1..*" -- "1..1" Processo_Agregado
produto "0..*" -- "1..1" GestorInput
'Etapa_Producao "1..*" -- "1..1" Processo_Agregado

produto "1..*" -- "1..1" Processo_unitario
Relatorio "1..1" -- "1..1" PCF
Processo_Agregado "1..1" -- "0..*" Gestao_Etapa
Processo_unitario "1..1" -- "0..*" Gestao_Processos





/'
Fim das ligações
'/
@enduml